import{B as i,E as s,k as o,kc as c,ob as l,pb as p,s as n}from"./chunk-YXSU4V5K.js";var v=class a{constructor(e){this.http=e}apiUrl=c.apiUrl+"/events";getLocalStorage(){return typeof window<"u"&&window.localStorage?window.localStorage:null}getAuthHeaders(){let e=this.getLocalStorage(),r=e?e.getItem("token"):"";if(!r)throw new Error("No se encontr\xF3 un token en localStorage.");return new l({Authorization:`Bearer ${r}`,"Content-Type":"application/json"})}createEvent(e){let r=this.getAuthHeaders();return this.http.post(`${this.apiUrl}`,e,{headers:r}).pipe(n(t=>(console.error("Error al crear el evento:",t),o(()=>new Error("Error al crear el evento.")))))}getEvents(){return this.http.get(`${this.apiUrl}`).pipe(n(e=>(console.error("Error al obtener eventos:",e),o(()=>new Error("Error al obtener eventos.")))))}getEventById(e){return this.http.get(`${this.apiUrl}/${e}`).pipe(n(r=>(console.error("Error al obtener evento:",r),o(()=>new Error("Error al obtener evento.")))))}updateEvent(e){let r=this.getAuthHeaders();return this.http.put(`${this.apiUrl}/${e.id}`,e,{headers:r}).pipe(n(t=>(console.error("Error al actualizar evento:",t),o(()=>new Error("Error al actualizar evento.")))))}deleteEvent(e){let r=this.getAuthHeaders();return this.http.delete(`${this.apiUrl}/${e}`,{headers:r}).pipe(n(t=>(console.error("Error al eliminar evento:",t),o(()=>new Error("Error al eliminar evento.")))))}registerToEvent(e){let r=this.getAuthHeaders();return this.http.post(`${this.apiUrl}/${e}/register`,{},{headers:r}).pipe(n(t=>(console.error("Error al inscribirse:",t),o(()=>new Error("Error al inscribirse.")))))}cancelRegistration(e){let r=this.getAuthHeaders();return this.http.delete(`${this.apiUrl}/${e}/unregister`,{headers:r}).pipe(n(t=>(console.error("Error al cancelar inscripci\xF3n:",t),o(()=>new Error("Error al cancelar inscripci\xF3n.")))))}getEventParticipants(e){let r=this.getAuthHeaders();return this.http.get(`${this.apiUrl}/${e}/participants`,{headers:r}).pipe(n(t=>(console.error("Error al obtener participantes:",t),o(()=>new Error("Error al obtener participantes.")))))}getCreatedEvents(){let e=this.getAuthHeaders();return this.http.get(`${this.apiUrl}/created`,{headers:e}).pipe(n(r=>(console.error("Error al obtener eventos creados:",r),o(()=>new Error("Error al obtener eventos creados.")))))}getRegisteredEvents(){let e=this.getAuthHeaders();return this.http.get(`${this.apiUrl}/registered`,{headers:e}).pipe(n(r=>(console.error("Error al obtener eventos inscritos:",r),o(()=>new Error("Error al obtener eventos inscritos.")))))}static \u0275fac=function(r){return new(r||a)(s(p))};static \u0275prov=i({token:a,factory:a.\u0275fac,providedIn:"root"})};var $=["Torneo","Liga","Final de liga","Drafteo","Sellado","Pre-release","Presentaci\xF3n","Lanzamiento","Demostraci\xF3n","Quedada","Casual / Juego libre","Evento de iniciaci\xF3n","Tarde tem\xE1tica","Evento cooperativo","Campa\xF1a narrativa","Charla / Taller","Pintado de miniaturas","Interclubes","Campeonato","Evento familiar / Infantil","Evento ben\xE9fico / Solidario","Mercadillo / Intercambio","Escape room / Enigma","Otro"];export{v as a,$ as b};
